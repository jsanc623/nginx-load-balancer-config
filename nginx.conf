user www-data;
pid /run/nginx.pid;
worker_processes 1;
worker_rlimit_nofile 200000;    # ulimit -n 200000

events {
    worker_connections 8000;    # worker_connections * worker_processes = max clients
    multi_accept on;
    use epoll;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 5;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    client_body_buffer_size 64K;
    client_header_buffer_size 16k; 
    client_max_body_size 512k; 
    large_client_header_buffers 2 32k; 

    # Caches information about open FDs, freqently accessed files.
    open_file_cache max=200000 inactive=10s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server_names_hash_bucket_size 64;
    server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset UTF-8;

    # Header timeouts, etc - kill inactive connections
    client_header_timeout 12; # request header timeout
    client_body_timeout 12; # request body timeout
    reset_timedout_connection on; # notify client of connection reset on timeout
    send_timeout 10; # unless client refreshes, just kill the connection

    access_log off;
    error_log off;

    # Gzip Settings
    gzip on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_min_length 40;
    gzip_comp_level 8;
    gzip_http_version 1.0;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    gzip_disable "msie6";
    
    upstream backend {
        least_conn;
        server google.com max_fails=2 fail_timeout=10s;
    }

    server {
        listen 80;
        server_name 107.170.32.18;
        access_log off;
        error_log /var/log/nginx/error.log crit;
        autoindex off;
    
        # Turn on status
        location /status {
            stub_status on;
        }
    
        location / {
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://backend;
        }
    }
}
